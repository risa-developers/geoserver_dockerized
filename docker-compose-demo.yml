version: '3'
services:
  geoserver:
    build:
      context: .
      args:
        - GEOSERVER_VERSION=2.24.1
        
    ports:
      - "8089:8080"
    environment:
      - INSTALL_EXTENSIONS=true
      - STABLE_EXTENSIONS=wps,csw,netcdf,netcdf-out,geofence,geofence-server
      - EXTRA_JAVA_OPTS=-Xms1G -Xmx2G
      - POSTGRES_JNDI_ENABLED=true
      - POSTGRES_HOST=postgis
      - POSTGRES_PORT=5432
      - POSTGRES_DB=geoserver
      - POSTGRES_USERNAME=geoserver
      - POSTGRES_PASSWORD=geoserver
      - POSTGRES_JNDI_RESOURCE_NAME=jdbc/postgres
      - CORS_ENABLED=true
      - CORS_ALLOWED_METHODS=GET,POST,PUT,HEAD,OPTIONS
      - CORS_ALLOWED_ORIGINS=https://ploto-middleware.risa.eu, http://ploto-middleware.risa.eu, ploto-middleware.risa.eu
      - CORS_ALLOWED_HEADERS=*
      - CORS_ALLOW_CREDENTIALS=true
      - GEOSERVER_CSRF_WHITELIST=ploto-middleware.risa.eu
      - GEOSERVER_CSRF_DISABLED=true
      - PROXY_BASE_URL=https://ploto-middleware.risa.eu/geoserver
    volumes:
      - ./geoserver_data:/opt/geoserver_data/:Z
      - ./additional_libs:/opt/additional_libs:Z # by mounting this we can install libs from host on startup
    healthcheck:
      test: curl --fail "http://localhost:8080/geoserver/web/wicket/resource/org.geoserver.web.GeoServerBasePage/img/logo.png" || exit 1
      interval: 1m
      retries: 3
      timeout: 20s
  postgis:
    image: postgis/postgis:16-3.4-alpine
    ports:
      - "5555:5432"
    environment:
      POSTGRES_USER: geoserver
      POSTGRES_PASSWORD: geoserver
    volumes:
      - ./postgis/postgresql_data:/var/lib/postgresql/data:Z
    healthcheck:
      test: pg_isready -U geoserver -h localhost -t 5 || exit 1
      interval: 10s
      retries: 5
      timeout: 10s
